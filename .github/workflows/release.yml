name: Release

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  check:
    name: Check versions
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3.3.0
      - name: Get Python version
        id: python-version
        run: |
          echo "::set-output name=version::$(cat python/hypha_rpc/VERSION | jq -r '.version')"
      - name: Get Javascript version
        id: js-version
        run: |
          echo "::set-output name=version::$(cat javascript/package.json | jq -r '.version')"
      - name: Compare versions
        run: |
          .github/check-versions.sh "${{ steps.python-version.outputs.version }}" "${{ steps.js-version.outputs.version }}"

  release-python:
    name: Release Python
    if: github.event_name != 'pull_request'
    needs: check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: python
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.11"

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"

      - name: Detect new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2.0.3
        with:
          create-tag: false
          version-command: |
            bash -o pipefail -c "cat python/hypha_rpc/VERSION | jq -r '.version'"

      - name: Build package
        run: |
          python -m pip install --upgrade pip
          python -m pip install -U setuptools wheel build twine
          rm -rf ./build ./dist
          python -m build --outdir ./dist .

      # Only run release steps on push to main/master
      - name: Push tag
        id: tag-version
        if: |
          github.event_name == 'push' &&
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') &&
          steps.check-version.outputs.previous-version != steps.check-version.outputs.current-version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.check-version.outputs.current-version }}

      - name: Publish to PyPI
        if: |
          github.event_name == 'push' &&
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') &&
          steps.check-version.outputs.previous-version != steps.check-version.outputs.current-version
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload --skip-existing ./dist/*

      - name: Publish the release notes
        if: |
          github.event_name == 'push' &&
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: release-drafter/release-drafter@v5.22.0
        with:
          publish: "${{ steps.tag-version.outputs.new_tag != '' }}"
          tag: "${{ steps.tag-version.outputs.new_tag }}"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  release-js:
    name: Release Javascript
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: javascript
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 2
      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "::set-output name=sha::$(git rev-parse --verify --quiet HEAD^)"
      - name: Detect new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2.0.3
        with:
          create-tag: false
          version-command: |
            bash -o pipefail -c "cat javascript/package.json | jq -r '.version'"
      - uses: actions/setup-node@v3.6.0
        with:
          node-version: 15.5.0
          registry-url: "https://registry.npmjs.org"
      - run: npm ci
      - run: npm run check-format
      - name: Set up Python 3.11
        uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.11"
      - run: pip install "redis==5.2.0" "hypha>=0.20.53" "aioboto3==13.1.1"
      - run: npm run test
      - run: npm run build
      - name: Publish package on NPM
        if: |
          github.event_name == 'push' &&
          (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') &&
          steps.check-version.outputs.previous-version != steps.check-version.outputs.current-version
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
